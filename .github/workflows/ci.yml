name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        rails: [ '7.0', '7.1' ]
        db: [ sqlite3, postgresql, mysql ]

        # -----------------------------------------------------------------
        #  Define every service‑specific field **once** in `include`.
        #  All values are plain YAML – no `${{ }}` inside `services`.
        # -----------------------------------------------------------------
        include:
          # ---------- PostgresQL ----------
          - rails: '7.0'
            db: postgresql
            ruby_image: ruby:3.2
            db_image: postgres:15
            db_env:
              POSTGRES_PASSWORD: postgres
            db_ports:
              - 5432:5432
            db_options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

          - rails: '7.1'
            db: postgresql
            ruby_image: ruby:3.2
            db_image: postgres:15
            db_env:
              POSTGRES_PASSWORD: postgres
            db_ports:
              - 5432:5432
            db_options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

          # ---------- MySQL ----------
          - rails: '7.0'
            db: mysql
            ruby_image: ruby:3.2
            db_image: mysql:8
            db_env:
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: test
            db_ports:
              - 3306:3306
            db_options: >-
              --health-cmd="mysqladmin ping -h localhost -P 3306 -uroot -proot"
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

          - rails: '7.1'
            db: mysql
            ruby_image: ruby:3.2
            db_image: mysql:8
            db_env:
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: test
            db_ports:
              - 3306:3306
            db_options: >-
              --health-cmd="mysqladmin ping -h localhost -P 3306 -uroot -proot"
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

    runs-on: ubuntu-latest

    # Run the job inside the Ruby Docker image
    container: ${{ matrix.ruby_image }}

    # -----------------------------------------------------------------
    #  Service definition – **no expressions** here.
    # -----------------------------------------------------------------
    services:
      db:
        image: ${{ matrix.db_image }}
        env: ${{ matrix.db_env }}
        ports: ${{ matrix.db_ports }}        # array from `include`
        options: ${{ matrix.db_options }}

    env:
      RAILS_VERSION: ${{ matrix.rails }}
      DATABASE_URL: >-
        ${{ matrix.db == 'sqlite3' && 'sqlite3::memory:' ||
            matrix.db == 'postgresql' && 'postgresql://postgres:postgres@localhost:5432/test' ||
            matrix.db == 'mysql' && 'mysql2://root:root@localhost:3306/test' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Create / migrate test DB
        run: bundle exec rails db:create db:migrate RAILS_ENV=test

      - name: Run specs
        run: bundle exec rspec
